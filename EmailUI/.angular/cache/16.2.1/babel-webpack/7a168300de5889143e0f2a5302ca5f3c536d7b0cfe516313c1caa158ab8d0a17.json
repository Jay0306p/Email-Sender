{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/email.service\";\nimport * as i2 from \"@angular/material/snack-bar\";\nimport * as i3 from \"@angular/material/button\";\nimport * as i4 from \"@angular/material/form-field\";\nimport * as i5 from \"@angular/material/input\";\nimport * as i6 from \"@angular/forms\";\nexport class EmailComponent {\n  constructor(email, snak) {\n    this.email = email;\n    this.snak = snak;\n    //blank object to store these field values\n    this.data = {\n      to: \"\",\n      subject: \"\",\n      message: \"\"\n    };\n  }\n  ngOnInit() {}\n  doSubmitForm() {\n    console.log(\"Form submitted successfully\");\n    console.log(\"DATA \", this.data);\n    if (this.data.to == '' || this.data.message == '' || this.data.subject == '') {\n      this.snak.open(\"fields cannoty be empty!!\", \"OK\");\n    }\n    this.email.sendEmail(this.data).subscribe(response => {\n      console.log(response);\n    }, error => {\n      console.log(error);\n    });\n  }\n}\n_class = EmailComponent;\n_class.ɵfac = function EmailComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.EmailService), i0.ɵɵdirectiveInject(i2.MatSnackBar));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-email\"]],\n  decls: 22,\n  vars: 3,\n  consts: [[1, \"container\"], [1, \"card\"], [3, \"ngSubmit\"], [\"appearance\", \"outline\", 1, \"field\"], [\"name\", \"to\", \"matInput\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"name\", \"subject\", \"matInput\", \"\", 3, \"ngModel\", \"ngModelChange\"], [1, \"example-full-width\", \"field\"], [\"name\", \"message\", \"rows\", \"10\", \"matInput\", \"\", \"placeholder\", \"Hi,How are you doing.\", 3, \"ngModel\", \"ngModelChange\"], [1, \"text-center\"], [\"type\", \"submit\", \"mat-raised-button\", \"\", \"color\", \"primary\"], [\"type\", \"reset\", \"mat-raised-button\", \"\", \"color\", \"accent\"]],\n  template: function EmailComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"form\", 2);\n      i0.ɵɵlistener(\"ngSubmit\", function EmailComponent_Template_form_ngSubmit_2_listener() {\n        return ctx.doSubmitForm();\n      });\n      i0.ɵɵelementStart(3, \"h1\");\n      i0.ɵɵtext(4, \"Compose Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"mat-form-field\", 3)(6, \"mat-label\");\n      i0.ɵɵtext(7, \"To\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"input\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function EmailComponent_Template_input_ngModelChange_8_listener($event) {\n        return ctx.data.to = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"mat-form-field\", 3)(10, \"mat-label\");\n      i0.ɵɵtext(11, \"Subject\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"input\", 5);\n      i0.ɵɵlistener(\"ngModelChange\", function EmailComponent_Template_input_ngModelChange_12_listener($event) {\n        return ctx.data.subject = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(13, \"mat-form-field\", 6)(14, \"mat-label\");\n      i0.ɵɵtext(15, \"Enter your message\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"textarea\", 7);\n      i0.ɵɵlistener(\"ngModelChange\", function EmailComponent_Template_textarea_ngModelChange_16_listener($event) {\n        return ctx.data.message = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(17, \"div\", 8)(18, \"button\", 9);\n      i0.ɵɵtext(19, \"Send\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"button\", 10);\n      i0.ɵɵtext(21, \"Reset\");\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngModel\", ctx.data.to);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.data.subject);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.data.message);\n    }\n  },\n  dependencies: [i3.MatButton, i4.MatFormField, i4.MatLabel, i5.MatInput, i6.ɵNgNoValidate, i6.DefaultValueAccessor, i6.NgControlStatus, i6.NgControlStatusGroup, i6.NgModel, i6.NgForm],\n  styles: [\".field[_ngcontent-%COMP%]{\\n    width: 100%;\\n}\\n\\n.card[_ngcontent-%COMP%]{\\n    width: 40%;\\n    margin: auto;\\n    background : white;\\n    padding: 20px;\\n}\\n\\n.card[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%]{\\n    text-align: center;\\n}\\n\\n.text-center[_ngcontent-%COMP%]{\\n    text-align: center;\\n}\\n\\n.card[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{\\n    margin: 5px;\\n}\\n.container[_ngcontent-%COMP%]{\\n    margin: 40px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9lbWFpbC9lbWFpbC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksV0FBVztBQUNmOztBQUVBO0lBQ0ksVUFBVTtJQUNWLFlBQVk7SUFDWixrQkFBa0I7SUFDbEIsYUFBYTtBQUNqQjs7QUFFQTtJQUNJLGtCQUFrQjtBQUN0Qjs7QUFFQTtJQUNJLGtCQUFrQjtBQUN0Qjs7QUFFQTtJQUNJLFdBQVc7QUFDZjtBQUNBO0lBQ0ksWUFBWTtBQUNoQiIsInNvdXJjZXNDb250ZW50IjpbIi5maWVsZHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG59XHJcblxyXG4uY2FyZHtcclxuICAgIHdpZHRoOiA0MCU7XHJcbiAgICBtYXJnaW46IGF1dG87XHJcbiAgICBiYWNrZ3JvdW5kIDogd2hpdGU7XHJcbiAgICBwYWRkaW5nOiAyMHB4O1xyXG59XHJcblxyXG4uY2FyZCBoMXtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxufVxyXG5cclxuLnRleHQtY2VudGVye1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG59XHJcblxyXG4uY2FyZCBidXR0b257XHJcbiAgICBtYXJnaW46IDVweDtcclxufVxyXG4uY29udGFpbmVye1xyXG4gICAgbWFyZ2luOiA0MHB4O1xyXG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["EmailComponent","constructor","email","snak","data","to","subject","message","ngOnInit","doSubmitForm","console","log","open","sendEmail","subscribe","response","error","i0","ɵɵdirectiveInject","i1","EmailService","i2","MatSnackBar","selectors","decls","vars","consts","template","EmailComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","EmailComponent_Template_form_ngSubmit_2_listener","ɵɵtext","ɵɵelementEnd","EmailComponent_Template_input_ngModelChange_8_listener","$event","EmailComponent_Template_input_ngModelChange_12_listener","EmailComponent_Template_textarea_ngModelChange_16_listener","ɵɵadvance","ɵɵproperty"],"sources":["H:\\Angular_Practice\\emailGUI\\src\\app\\components\\email\\email.component.ts","H:\\Angular_Practice\\emailGUI\\src\\app\\components\\email\\email.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { EmailService } from 'src/app/service/email.service';\n\n@Component({\n  selector: 'app-email',\n  templateUrl: './email.component.html',\n  styleUrls: ['./email.component.css']\n})\nexport class EmailComponent implements OnInit{\n\n  //blank object to store these field values\n  data={\n    to:\"\",\n    subject:\"\",\n    message:\"\"\n  }\n\n  constructor(private email:EmailService,private snak:MatSnackBar) { }\n\n  ngOnInit(): void {\n    \n  }\n\n  doSubmitForm()\n  {\n    console.log(\"Form submitted successfully\");\n    console.log(\"DATA \", this.data);\n\n    if(this.data.to=='' || this.data.message=='' || this.data.subject=='')\n    {\n      this.snak.open(\"fields cannoty be empty!!\",\"OK\")\n    }\n\n    this.email.sendEmail(this.data).subscribe(\n      response=>{\n        console.log(response);\n      },\n      error=>{\n        console.log(error);\n      }\n      \n    )\n  }\n  \n\n}\n","<div class=\"container\">\n    <div class=\"card\">\n        <form (ngSubmit)=\"doSubmitForm()\">\n            <h1>Compose Email</h1>\n            <mat-form-field class=\"field\" appearance=\"outline\">\n                <mat-label>To</mat-label>\n                <input name=\"to\" [(ngModel)]=\"data.to\" matInput>\n              </mat-form-field>\n\n              <mat-form-field class=\"field\" appearance=\"outline\">\n                <mat-label>Subject</mat-label>\n                <input name=\"subject\" [(ngModel)]=\"data.subject\" matInput>\n              </mat-form-field>\n\n              <mat-form-field class=\"example-full-width field\">\n                <mat-label>Enter your message</mat-label>\n                <textarea name=\"message\" [(ngModel)]=\"data.message\" rows=\"10\" matInput placeholder=\"Hi,How are you doing.\"></textarea>\n              </mat-form-field>\n\n              <div class=\"text-center\">\n                <button type=\"submit\" mat-raised-button color=\"primary\">Send</button>\n                <button type=\"reset\" mat-raised-button color=\"accent\">Reset</button>\n            </div>\n        </form>\n        <!-- {{data | json }} - just for testing if the values are getting stored or not -->\n        <!-- [] - event binding, () - data binding -->\n    </div>\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}